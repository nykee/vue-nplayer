{"remainingRequest":"/Users/admin/WebstormProjects/vue-nplayer/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/admin/WebstormProjects/vue-nplayer/packages/MusicPlayer/src/MusicPlayer.vue?vue&type=style&index=0&id=8627bd84&scoped=true&lang=css&","dependencies":[{"path":"/Users/admin/WebstormProjects/vue-nplayer/packages/MusicPlayer/src/MusicPlayer.vue","mtime":1585103361000},{"path":"/Users/admin/WebstormProjects/vue-nplayer/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/WebstormProjects/vue-nplayer/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/admin/WebstormProjects/vue-nplayer/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/admin/WebstormProjects/vue-nplayer/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/admin/WebstormProjects/vue-nplayer/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MusicPlayer.vue"],"names":[],"mappingssBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MusicPlayer.vue","sourceRoot":"packages/MusicPlayer/src","sourcesContent":["<template>\n    <div >\n        <!--正常模式播放器-->\n        <keep-alive>\n            <div v-if=\"!isMini\" :class=\"{'msc-player-box':!isToggle,'msc-player-hide':isToggle}\"\n                 style=\"top:84%;\"\n                 ref=\"mPlayer\">\n                <div class=\"clearfix position-relative\">\n                    <div id=\"msc-player\" class=\"row-flex-center-middle mPlayer-main-board fl\" >\n                        <div  class=\"mPlayer-main-board-block playCtrl col-span-6\">\n                            <i class=\"fa  fa-2x playBtn ctrlIcons\"\n                               :class=\"{'fa-pause':playStatus==='playing',\n               'fa-play':playStatus==='paused'}\" @click=\"changePlayStatus\"></i>\n                            <i class=\"fa fa-step-backward ctrlIcons\" @click=\"playPrev\"></i>\n                            <i class=\"fa fa-step-forward ctrlIcons\" @click=\"playNext\"></i>\n                        </div>\n                        <div  class=\"mPlayer-main-board-block col-span-9\">\n                            <ul>\n\n                                <li class=\"mPlayer-song-name\">\n                                    <!--<Tooltip :content=\"currentSong.title\" theme=\"light\" placement=\"top\" style=\"z-index: 1000!important;\" max-width=\"200\">-->\n                                        {{currentSong.title}}\n                                    <!--</Tooltip>-->\n                                </li>\n\n                                <li class=\"mPlayer-artist\">\n                                    <!--<Tooltip :content=\"currentSong.singer\" theme=\"light\" placement=\"bottom\">-->\n                                        {{currentSong.author}}\n                                    <!--</Tooltip>-->\n                                </li>\n                            </ul>\n                        </div>\n                        <div :span=\"7\" class=\"mPlayer-main-board-block col-span-7\">\n                            <img :src=\"currentSong.pic\" alt=\"\" class=\"mPlayer-album\" :class=\"{'picSpin':playStatus==='playing'}\">\n                        </div>\n                        <div :span=\"2\" class=\"mPlayer-main-board-block col-span-2\">\n                            <ul>\n                                <li @click=\"toggleSongListShow\" class=\"ctrlIcons toggleListBtn\">\n                                    <i class=\"fa \" :class=\"{'fa-toggle-up':!isSongListShow,'fa-toggle-down':isSongListShow}\"></i>\n                                </li>\n                                <li @click=\"changePlayMode\" class=\"ctrlIcons\">\n                                    <i class=\"fa \" :class=\"{'fa-random':isRandom,'fa-reorder':!isRandom}\"></i>\n                                </li>\n                                <li  class=\"ctrlIcons\" @click=\"toggleMobileMini\">\n                                    <i class=\"fa fa-compress\"></i>\n                                </li>\n                                <li class=\"ctrlIcons\" @click=\"toggleLyrics\">\n                                    <i class=\"fa fa-newspaper-o\"></i>\n                                </li>\n                            </ul>\n                        </div>\n                    </div>\n                    <div class=\"time-ctrl\">\n                        <ul class=\"clearfix\">\n                            <li class=\"fl progress-bar\" @click=\"handleProgressClick\">\n                                <i-progress :percent=\"playPercent\"\n                                            hide-info\n                                            :stroke-width=\"5\" class=\"ivu-progress-bar\"\n\n                                ></i-progress>\n                            </li>\n                            <li class=\"fl timeDuration\">\n                                <span>{{cur_song_duration}}</span><span>/</span><span>{{cur_song_time_count}}</span>\n                            </li>\n                        </ul>\n                    </div>\n                    <div class=\"vol-ctrl\" @mouseover=\"toggleVSlider\" @mouseout=\"toggleVSlider\">\n                        <i class=\"fa  volume-btn ctrlIcons\"\n                           :class=\"{'fa-volume-off':isMute,'fa-volume-up':!isMute}\"></i>\n                        <Slider v-model=\"volumeNum\" :step=\"5\" class=\"my-slider\" v-if=\"isVolumeSliderShow\"></Slider>\n                    </div>\n                    <div class=\"miniBtn-container\" v-if=\"!isMobile\">\n                        <i class=\"fa   miniBtn ctrlIcons\" :class=\"{'fa-chevron-left':!isToggle,'fa-chevron-right':isToggle}\"\n                           @click=\"toggleSide\"></i>\n                    </div>\n                </div>\n                <!--播放列表-->\n                <keep-alive>\n                    <div id=\"mPlayer-playlist\" ref=\"mPlayerPlaylist\" class=\"mPlayer-playlist\" v-show=\"isSongListShow\">\n\n                        <div v-for=\"song in songLists\" class=\"mPlayer-playlist-items row-flex-center-middle\"\n                             :key=\"song.index\">\n                            <div @click=\"clickToPlay(song.index)\">\n                                <div  :span=\"1\"  class=\" playlist-cur col-span-1\"     :class=\"{'curIdx':song.index === isPlayingIndex}\"></div>\n                                <div  :span=\"3\"  class=\"playlist-index col-span-3\"    :class=\"{'playing-color':song.index === isPlayingIndex}\">{{song.index}}</div>\n                                <div  :span=\"10\" class=\" playlist-songname col-span-10\" :class=\"{'playing-color':song.index === isPlayingIndex}\">{{song.title}}</div>\n                                <div  :span=\"10\" class=\" playlist-artist col-span-10\"   :class=\"{'playing-color':song.index === isPlayingIndex}\">{{song.author}}</div>\n                            </div>\n\n                        </div>\n                    </div>\n                </keep-alive>\n            </div>\n        </keep-alive>\n\n        <!--迷你播放器模式-->\n        <keep-alive>\n            <div id=\"mini-player\" v-if=\"isMini\" >\n\n                <div class=\"mini-player-box\"   draggable=\"true\" ref=\"miniPlayer\" @mousedown=\"move\">\n                    <i class=\"fa  fa-2x playBtn-mini ctrlIcons\"\n                       :class=\"{'fa-pause':playStatus==='playing',\n               'fa-play':playStatus==='paused'}\" @click=\"changePlayStatus\"></i>\n                    <i class=\"fa fa-expand toggle-mini-btn\" @click=\"toggleMobileMini\"></i>\n                    <img :src=\"currentSong.pic\" alt=\"\" class=\"mPlayer-album-mini\" :class=\"{'picSpin':playStatus==='playing'}\"/>\n                </div>\n            </div>\n        </keep-alive>\n\n\n        <audio :src=\"currentSong.url\" class=\"mscAudio\"  ref=\"mscAudio\">\n            您的浏览器不支持 audio 标签。请使用Chrome,Firefox等现代浏览器\n        </audio>\n        <!--歌词组件-->\n        <Lyrics :lyric=\"lyric\"  v-show=\"isLyricsShow\"></Lyrics>\n    </div>\n</template>\n<script lang=\"ts\">\n    import Lyrics from './Lyric.vue'\n\n    export default  {\n        data(){\n            return{\n                isSongListShow:false, //播放列表显示标志位\n            isToggle: true,         //播放器侧边显示标志位\n            songLists: [], //全部歌曲\n            playStatus:  'paused', //播放状态\n            currentSong:  {},      //当前播放歌曲\n            isMobile :  false,     //是否为手机标志位\n            isMini : true,      //是否为Mini标志位\n            isPlayingIndex:1, //当前播放歌曲的索引\n            volumeNum: 20,     //音量\n            isVolumeSliderShow :  false, //音量条显示标志位\n            isRandom :  false, //随机播放flag\n            cur_song_duration: \"00:00\", //当前歌曲播放进度分秒\n            cur_song_time_count: \"00:00\", //当前歌曲总分秒\n            playPercent:0, //进度条百分比\n            lyric:'',//传给歌词组件的歌词字符串\n            lyrics:[],//歌词数组\n            isLyricsShow : false,//歌词是否显示 \n            }\n        },\n\n        \n        methods:{\n            toggleSongListShow(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method toggleSongListShow\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 播放列表显示标志位\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                this.isSongListShow = !this.isSongListShow;\n            },\n            changePlayMode() {\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method changePlayMode\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 切换播放模式\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                this.isRandom = !this.isRandom;\n                let infoMsg = this.isRandom ?\n                    \"开启随机播放\":\n                    \"开启列表播放\".toString();\n//            this.$Notice.info({\n//                title: infoMsg\n//            })\n            },\n            toggleSide() {\n                /*播放器播放器侧边模式与正常模式*/\n                this.isToggle = !this.isToggle;\n            },\n            toggleLyrics(){\n                this.isLyricsShow = !this.isLyricsShow;\n//            let info = this.isLyricsShow?\"歌词显示开启\":\"歌词显示关闭\";\n//            this.$Message.info(info);\n            },\n            toggleMobileMini() {\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method toggleMobileMini\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 切换mini模式标志位\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                this.isMini = !this.isMini;\n                this.isSongListShow = false;\n                if(!this.isMini){\n\n//                this.$Message.info(\"切换回正常播放器！\");\n                    this.$nextTick(()=>{\n                        this.isToggle =false;\n                    })\n\n\n                }\n                else {\n//                this.$Message.info(\"切换至mini播放器！\");\n                    // this.toggleSide();\n                }\n            },\n            changePlayStatus(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method changePlayStatus\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 点击播放/暂停按钮改变播放状态\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n\n                (this.$refs.mscAudio ).setAttribute(\"autoplay\", \"autoplay\");\n                if (this.playStatus === \"paused\") {\n                    this.playStatus = \"playing\";\n                    this.getLyric();\n                    (this.$refs.mscAudio ).play();\n                    this.isPlayingIndex = (this.currentSong ).index;\n//                this.$Message.info({content:\"开始播放，ctrl+↑增加音量，ctrl+↓减小音量，ctrl+ ←切换上一首，ctrl+→切换下一首\",duration:4})\n                }\n                else {\n                    this.playStatus = \"paused\";\n                    (this.$refs.mscAudio ).pause();\n                }\n            },\n            playPrev() {\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method playPrev\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description:播放前一首\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                let idx = (this.currentSong ).index;\n                let randIdx = this.getRdmIndex();\n                if (this.isRandom) {\n                    this.currentSong = this.songLists[randIdx - 1];\n                    this.isPlayingIndex = randIdx;\n                }\n                else {\n                    if (idx !== 1) {\n                        idx -= 1;\n                        this.currentSong = this.songLists[idx - 1];\n                    }\n                    this.isPlayingIndex = idx;\n\n                }\n                if(this.playStatus ===\"paused\"){\n                    (this.$refs.mscAudio ).removeAttribute(\"autoplay\")\n                }\n                this.getLyric();\n                this.scrollPlayList();\n            },\n            playNext() {\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method playNext\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description:播放下一首\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                let idx = (this.currentSong ).index;\n                let randIdx = this.getRdmIndex();\n                if (this.isRandom) {\n                    this.currentSong = this.songLists[randIdx - 1];\n                }\n                else {\n                    if (idx === this.songLists.length) {\n                        this.currentSong = this.songLists[0];\n                    }\n                    else {\n                        this.currentSong = this.songLists[idx];\n                    }\n                }\n\n                this.isPlayingIndex = (this.currentSong ).index;\n\n                if(this.playStatus ===\"paused\"){\n                    (this.$refs.mscAudio ).removeAttribute(\"autoplay\")\n                }\n                this.getLyric();\n                this.scrollPlayList();\n            },\n            parseLyric(text){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method parseLyric\n                 * @param {type} text - 歌词\n                 * @description: 处理接口获取到的歌词\n                 * @author: admin\n                 * @date: 2020/3/3\n                 */\n\n                    //将文本分隔成一行一行，存入数组\n                let lines = text.split('\\n'),\n                    //用于匹配时间的正则表达式，匹配的结果类似[xx:xx.xx]\n                    pattern = /\\[\\d{2}:\\d{2}.\\d{2}]/g,\n                    //保存最终结果的数组\n                    result = [];\n                //去掉不含时间的行\n                while (!pattern.test(lines[0])) {\n                    lines = lines.slice(1);\n                }\n                //上面用'\\n'生成生成数组时，结果中最后一个为空元素，这里将去掉\n                lines[lines.length - 1].length === 0 && lines.pop();\n                lines.forEach(function(v /*数组元素值*/ , i /*元素索引*/ , a /*数组本身*/ ) {\n                    //提取出时间[xx:xx.xx]\n                    let time = v.match(pattern),\n                        //提取歌词\n                        value = v.replace(pattern, '');\n                    //因为一行里面可能有多个时间，所以time有可能是[xx:xx.xx][xx:xx.xx][xx:xx.xx]的形式，需要进一步分隔\n                    time.forEach(function(v1, i1, a1) {\n                        //去掉时间里的中括号得到xx:xx.xx\n                        let t = v1.slice(1, -1).split(':');\n                        //将结果压入最终数组\n                        result.push([parseInt(t[0], 10) * 60 + parseFloat(t[1]), value]);\n                    });\n                });\n                //最后将结果数组中的元素按时间大小排序，以便保存之后正常显示歌词\n                result.sort(function(a, b) {\n                    return a[0] - b[0];\n                });\n                return result;\n            },\n\n            showLyrics(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method showLyrics\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 根据h5media 的timeupdate事件进行歌词显示\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n                (this.$refs.mscAudio ).addEventListener(\"timeupdate\", (e) => {\n                    for(let i=0,len = this.lyrics.length;i<len;i++){\n                        if(e.target.currentTime /*当前播放的时间*/ > this.lyrics[i][0]){\n                            this.lyric = this.lyrics[i][1];\n                        }\n                    }\n                });\n            },\n            getRdmIndex(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method getRdmIndex\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 获取随机播放的随机数字\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n                return Math.floor(Math.random() * (this.songLists.length - 1 + 1) + 1)\n            },\n\n            scrollPlayList(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method scrollPlayList\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description:\n                 * @author: admin\n                 * @date: 2020/3/2\n                 */\n                if(this.isSongListShow){\n                    let scrollHeight = (this.$refs.mPlayerPlaylist ).scrollHeight;\n                    let sc = ((this.isPlayingIndex - 1) / this.songLists.length);\n                    (this.$refs.mPlayerPlaylist ).scrollTop = sc * scrollHeight;\n                }\n\n            },\n            clickToPlay(index) {\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method clickToPlay\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 点击播放列表播放对应的歌曲\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                (this.$refs.mscAudio ).setAttribute(\"autoplay\", \"autoplay\");\n                this.currentSong = this.songLists[index - 1];\n//          console.log(this.currentSong);\n                this.getLyric();\n                this.playStatus = \"playing\";\n                (this.$refs.mscAudio ).play();\n                this.isPlayingIndex = index;\n\n            },\n            toggleVSlider() {\n                /*切换音量调整条 的显示*/\n                this.isVolumeSliderShow = !this.isVolumeSliderShow\n            },\n            handleProgressClick(e){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method handleProgressClick\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 点击进度条切换到相应的时间\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n                /*快进功能*/\n                e= event || window.event;\n                //获得鼠标事件的clientX(相对dom元素的x轴坐标)\n                let prog_x =e.clientX;\n                //超出100按100取整\n                prog_x = prog_x>=100? 100 :prog_x;\n                this.playPercent =prog_x;\n                //设置auido元素的current为百分比乘以audio中的媒体元素的总时间\n                (this.$refs.mscAudio ).currentTime = (this.$refs.mscAudio ).duration * this.playPercent/100\n            },\n\n\n            updateSongDuration(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method updateSongDuration\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 监听timeUpdate事件，更新界面上的时间，设计分秒转换\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n\n                (this.$refs.mscAudio ).addEventListener(\"timeupdate\", (e) => {\n                    let currentTime = Math.floor(e.target.currentTime);\n                    this.playPercent = Math.floor((currentTime / e.target.duration) * 100);\n                    let sec = \"00\",\n                        min = \"00\",\n                        colon = \":\";\n                    if (currentTime < 60) {\n                        if (currentTime < 10) {\n                            this.cur_song_duration = min + colon + \"0\" + currentTime;\n                        }\n                        else {\n                            this.cur_song_duration = min + colon + currentTime;\n                        }\n                    }\n                    else {\n                        let _min = \"0\" + Math.floor(currentTime / 60);\n                        let _sec = Math.floor(currentTime - 60 * Math.floor(currentTime / 60));\n                        let secOutPut = _sec < 10 ? (\"0\" + sec) : sec+\"\";\n                        this.cur_song_duration = _min + colon + secOutPut;\n                    }\n                });\n            },\n            keyBoardEventListener(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method keyBoardEventListener\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 监听键盘事件，切歌\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n                let self = this;\n                document.onkeydown = function (e) {\n                    let evn = e || event;\n                    let key = evn.keyCode || evn.which || evn.charCode;\n                    let ctrlKey =evn.ctrlKey || evn.metaKey;\n                    /*ctrl+左箭头切换上一首*/\n                    if(ctrlKey&& key ===37){\n                        evn.preventDefault();\n                        self.playPrev();\n//                    self.$Notice.info({\n//                        title: \"切换上一首\",\n//                        desc:\"当前:\"+(self.currentSong ).author+\"--\"+(self.currentSong ).title\n//                    })\n                    }\n                    /*ctrl+右箭头切换下一首*/\n                    if(ctrlKey&& key ===39){\n                        evn.preventDefault();\n                        self.playNext();\n//                    self.$Notice.info({\n//                        title: \"切换下一首\",\n//                        desc:\"当前:\"+(self.currentSong ).author+\"--\"+(self.currentSong ).title\n//                    })\n                    }\n                    /*ctrl+上箭头增加音量*/\n                    if(ctrlKey&& key ===38){\n                        evn.preventDefault();\n                        self.volumeNum+=10;\n                        if(self.volumeNum>100){\n                            self.volumeNum= 100;\n                            return false }\n//                    self.$Notice.info({\n//                        title: \"音量+10,当前音量：\"+self.volumeNum\n//                    });\n                    }\n                    /*ctrl+下箭头减小音量*/\n                    if(ctrlKey&& key ===40){\n                        evn.preventDefault();\n                        self.volumeNum-=10;\n                        if(self.volumeNum<0){\n                            self.volumeNum=0;\n                            return 0 }\n//                    self.$Notice.info({\n//                        title: \"音量-10,当前音量：\"+self.volumeNum\n//                    })\n                    }\n                };\n            },\n            loadMetadataListener(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method loadMetadataListener\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 监听loadedmetadata事件，音频文件加载完成后获取duration，绑定到cur_song_time_count上\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n                (this.$refs.mscAudio ).addEventListener(\"loadedmetadata\", (e) => {\n                    let min = Math.floor(e.target.duration / 60);\n                    let sec = Math.floor(e.target.duration % 60);\n                    let secOut = sec < 10 ? (\"0\" + sec) : sec+\"\";\n                    let minOut = min < 10 ? (\"0\" + min) : min+\"\";\n                    this.cur_song_time_count = minOut + \":\" + secOut;\n                });\n            },\n            getSongLists(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method getSongLists\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: ajax获取歌单数据，绑定到songLists和currentSong，\n                 * 使用Promise，因为获取歌词的接口依赖此接口的返回\n                 * @author: admin\n                 * @date: 2020/3/4\n                 */\n                return new Promise((reso,rej)=>{\n                    (this ).$api.music.getSongList().then((res)=>{\n                        if(res.data.Code === \"OK\"){\n                            for (let i = 0, len = res.data.Body.length; i < len; i++) {\n                                res.data.Body[i].index = i + 1;\n                            }\n                            this.songLists = res.data.Body;\n                            this.currentSong = res.data.Body[0];\n//                      console.log(this.currentSong)\n//                  console.log(this.currentSong)\n                        }\n                        reso();\n\n                    }).catch((err)=>{\n                        rej(err);\n                    });\n                })\n\n            },\n            getLyric(){\n                /**\n                 * @file: MusicPlayer.vue\n                 * @method getLyric\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @param {type} argName - description\n                 * @return {type} argName - description\n                 * @description: 获取歌词\n                 * @author: admin\n                 * @date: 2020/3/1\n                 */\n                let self = this;\n                self.lyrics = [];\n                self.lyric = '';\n                let param = {\n                    id :(self.currentSong ).id\n                };\n//          alert(self.currentSong.id)\n//          (this ).$api.music.getLyric(param).then(res=>{\n//              let result = res;\n//              if(result.status === 200){\n//                  let resLyric = result.data.lrc.lyric;\n//                  if(!resLyric){\n//                      (self ).lyrics =\"暂无歌词\"\n//                  }\n//                  self.lyrics = self.parseLyric(resLyric);\n//                  console.log(self.lyrics)\n//              }\n//          }).catch(err=>{\n//\n//          })\n//            let lrcAddress = (self.currentSong ).lrc.replace(\"cache=0\",\"cache=1\");\n//          console.log(lrcAddress);\n//          console.log(self.currentSong.lrc);\n//            this.$axios.get(lrcAddress)\n//                .then((res) => {\n//                    self.lyrics = this.parseLyric(res.data);\n////                  console.log(self.lyrics)\n////                  if(this.lyrics ===\"[00:00.00] 暂无歌词\"){this.lyrics =\"暂无歌词\"}\n//\n//                })\n//                .catch((err)=>{\n//                    console.log(err);\n//                });\n\n            },\n            setValue(){\n                /*设置音量*/\n                (this.$refs.mscAudio ).volume = this.volumeNum/100;\n            },\n            isMoblie(){\n                /*屏幕大小小于425则为手机页面*/\n                if (window.screen.width <= 425) {\n                    this.isMobile = true;\n                    this.isMini = true;\n                }\n                else {\n                    this.isMobile = false;\n                }\n            },\n            mediaOnEndedListener(){\n                /*监听ended事件，一个音频放完后，调用playnext方法，手动播放下一首歌*/\n                (this.$refs.mscAudio ).addEventListener(\"ended\", () => {\n                    this.playNext();\n                });\n            },\n\n            move(e){\n                let $msc = this.$refs.miniPlayer;\n\n                document.onmousemove = (e)=>{       //鼠标按下并移动的事件\n\n\n                    //移动当前元素\n                    ($msc ).style.left = e.clientX + 'px';\n                    ($msc ).style.top = e.clientY + 'px';\n                };\n                document.onmouseup = (e) => {\n                    document.onmousemove = null;\n                    document.onmouseup = null;\n                };\n            },\n\n\n\n\n            \n        },\n        mounted() {\n            this.getSongLists();\n            this.setValue();\n            this.isMoblie();\n            this.mediaOnEndedListener();\n            this.updateSongDuration();\n            this.keyBoardEventListener();\n            this.loadMetadataListener();\n            this.showLyrics();\n        },\n        computed:{\n            isMute(){\n                /*音量为零返回计算属性isMute*/\n                return this.volumeNum === 0\n            },\n        },\n\n         watch:{\n             volumeNum(){\n                 /*监听音乐变化设置audio音量*/\n                 (this.$refs.mscAudio ).volume = this.volumeNum/100;\n             }\n         },\n\n\n\n    }\n</script>\n<style scoped>\n\n    .msc-player-box {\n        z-index: 8;\n        position: fixed;\n        top:86%;\n        transition: transform ease .9s;\n        transform: translateX(0);\n    }\n    .msc-player-hide{\n        z-index: 8;\n        top:86%;\n        position: fixed;\n        transition: transform ease .9s;\n        transform: translateX(-100%);\n    }\n\n    .mPlayer-main-board {\n        background-color: #929292;\n        border-radius: 4px;\n        opacity: .85;\n        padding: .5rem .9rem 1.5rem .4rem;\n        width: 20rem;\n        height: 6.5rem;\n        color: #f6f6f6;\n    }\n\n    .mPlayer-song-name, .mPlayer-artist {\n        text-align: center;\n        font-size: .8rem !important;\n        line-height: 1rem;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n\n    .mPlayer-artist {\n        text-overflow: ellipsis;\n        margin-top: .2rem;\n    }\n    #mini-player{\n        width: 5rem;\n        height:5rem;\n        position: absolute;\n    }\n\n\n\n    .mPlayer-album {\n        height: 4rem;\n        width: 4rem;\n        border-radius: 50%;\n        vertical-align: top;\n    }\n\n    .miniBtn {\n        line-height: 6.5rem;\n    }\n\n    .miniBtn-container {\n        height: 6.5rem;\n        width: 1.8rem;\n        position: absolute;\n        top: 0;\n        left: 100%;\n        background-color: rgba(137, 137, 137, .75);\n        border-radius: 2px;\n        text-align: center;\n        z-index: 2;\n    }\n\n    .playCtrl > i {\n        padding-left: .2rem;\n    }\n\n    .mPlayer-playlist {\n        position: absolute;\n        bottom: 100%;\n        background-color: #929292;\n        opacity: .85;\n        color: #f6f6f6;\n        padding: .3rem;\n        border-radius: 4px;\n        width: 20rem;\n        max-height: 20rem;\n        margin-bottom: .2rem;\n        overflow-x: hidden;\n        overflow-y:scroll;\n        font-size: .8rem;\n        z-index: 8;\n    }\n\n    .playlist-index {\n        padding-right: .5rem;\n    }\n    .fa-step-backward{\n        margin-right:.2rem;\n    }\n\n    .playlist-artist {\n        text-overflow: ellipsis;\n        width: 8rem;\n        white-space: nowrap;\n        overflow: hidden;\n        padding-right: .2rem;\n        text-align: center;\n    }\n\n    .playlist-index, .playlist-songname, .playlist-artist, .playlist-cur, .ctrlIcons {\n        cursor: pointer;\n        /*font-size: .8rem;*/\n    }\n    .playlist-songname{\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n    }\n    .mPlayer-playlist-items {\n        margin-top: .3rem;\n        padding: .2rem 0;\n        width: 19.5rem;\n        overflow: hidden;\n    }\n\n    .playing-color {\n        color: orange;\n    }\n\n    .playlist-cur {\n\n        width: 3px;\n        height: 1rem;\n        margin-right: .3rem;\n    }\n\n    .curIdx {\n        background-color: orange;\n    }\n\n    .mPlayer-playlist-items:hover {\n        background-color: #fff;\n        opacity: .5;\n        color: orange;\n    }\n\n    .curSong {\n        background-color: #d4d3da;\n    }\n\n    .playBtn {\n        width: 2rem;\n        /*margin-right: .4rem;*/\n    }\n\n    .toggleListBtn {\n        margin-bottom: .4rem;\n    }\n\n    .mscAudio {\n        display: none;\n    }\n\n\n\n    .mini-player-box {\n        width: 5rem;\n        height: 5rem;\n        border-radius: 50%;\n        background-color: rgba(146, 146, 146, 0.35);\n        position: fixed;\n        top: 85%;\n        left: 1%;\n        z-index: 99;\n    }\n\n    .mPlayer-album-mini {\n        height: 5rem;\n        width: 5rem;\n        border-radius: 50%;\n        vertical-align: top;\n        /*opacity: 0.75;*/\n        /*position: absolute;*/\n    }\n\n    @keyframes picRotate {\n        from {\n            transform: rotate(0)\n        }\n        to {\n            transform: rotate(360deg)\n        }\n    }\n\n    .picSpin {\n        animation: picRotate 10.2s linear infinite;\n    }\n\n    .playBtn-mini {\n        width: 2rem;\n        position: absolute;\n        top: 28%;\n        left: 36%;\n        color: #fff;\n        z-index: 2;\n    }\n\n    .toggle-mini-btn {\n        position: absolute;\n        color: #fff;\n        z-index: 2;\n        top: 74%;\n        left: 43%;\n\n    }\n    .toggle-mini-btn:hover{\n        cursor: pointer;\n    }\n\n    .volume-slider {\n        position: absolute;\n        top: 0;\n        left: 5px\n    }\n\n    .volume-btn {\n        position: absolute;\n        top: 55%;\n    }\n\n    .slide-range {\n        display: none;\n    }\n\n    .volume-slider-bar {\n        background-color: #57a3f3;\n        border-radius: 3px;\n        width: 4px;\n        /*height: 30%;*/\n        position: absolute;\n        bottom: 0;\n    }\n\n    .volume-slider-wrap {\n        width: 4px;\n        height: 46px;\n        background-color: #e8eaec;\n        border-radius: 3px;\n    }\n\n    .volume-slider-btn {\n        width: 10px;\n        height: 10px;\n        border: 2px solid #57a3f3;\n        border-radius: 50%;\n        background-color: #fff;\n        outline: 0;\n        position: absolute;\n        left: -3px;\n        /*bottom:30%;*/\n        cursor: pointer;\n    }\n\n    .volume-box {\n        height: 5rem\n    }\n\n    .time-ctrl {\n        position: absolute;\n        bottom: 5%;\n        right: 40%;\n    }\n\n    .timeDuration {\n        margin-left: .4rem;\n        font-size: .8rem;\n        color: #f8f8f8;\n    }\n\n    .ivu-progress-bar {\n        width: 7rem\n    }\n\n    .vol-ctrl {\n        position: absolute;\n        bottom: 10%;\n        right: 10%;\n        color: #fff;\n        width: 4rem;\n        height: 1rem;\n\n    }\n\n    .my-slider {\n        position: absolute;\n        top: -21%;\n        left: 27%;\n        width: 4.5rem;\n    }\n\n    .mPlayer-playlist::-webkit-scrollbar-track-piece {\n        /*滚动条凹槽的颜色，还可以设置边框属性*/\n        background-color:#f8f8f8;\n    }\n    .mPlayer-playlist::-webkit-scrollbar {\n        /*滚动条的宽度*/\n        width:8px;\n        height:9px;\n    }\n    .mPlayer-playlist::-webkit-scrollbar-thumb {\n        /*滚动条的设置*/\n        background-color:#dddddd;\n        background-clip:padding-box;\n        min-height:28px;\n    }\n    .mPlayer-playlist::-webkit-scrollbar-thumb:hover {\n        background-color:#bbb;\n    }\n    .progress-bar{\n        cursor: pointer;\n    }\n    .row-flex-center-middle{\n        display: flex;\n        -webkit-box-orient: horizontal;\n        -webkit-box-direction: normal;\n        flex-direction: row;\n        flex-wrap: wrap;\n        align-items: center;\n        justify-content: center;\n    }\n    .col-span-1{\n        display: block;\n        width: 4.16666667%\n    }\n    .col-span-2{\n        display: block;\n        width: 8.33333333%;\n    }\n    .col-span-3{\n        display: block;\n        width: 12.5%\n    }\n    .col-span-4{\n        display: block;\n        width: 16.66666667%\n    }\n    .col-span-5{\n        display: block;\n        width: 20.83333333%\n    }\n    .col-span-6{\n        display: block;\n        width: 25%;\n    }\n    .col-span-7{\n        display: block;\n        width: 29.16666667%;\n    }\n    .col-span-8{\n        display: block;\n        width: 33.33333333%\n\n    }\n    .col-span-9{\n        display: block;\n        width: 37.5%;\n    }\n    .col-span-10{\n        display: block;\n        width: 41.66666667%\n    }\n    .col-span-11{\n        display: block;\n        width: 45.83333333%\n    }\n    .col-span-12{\n        display: block;\n        width: 50%;\n    }\n    .position-relative{\n        position: relative;\n    }\n    .fl{\n        float: left;\n    }\n\n</style>\n"]}]}